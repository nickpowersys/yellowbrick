# AppVeyor is a CI service to build and run tests under Windows
# https://ci.appveyor.com/project/districtdatalabs/yellowbrick

image:
  - Previous Visual Studio 2017

version: 0.9.{build}
pull_requests:
  do_not_increment_build_number: true

branches:
  only:
  - master
  - develop

environment:
    matrix:
        # Tests failing on 32 bit architectures
        # https://github.com/numpy/numpy/issues/4384

        # - PYTHON: "C:\\Python36"
        #   PYTHON_VERSION: "3.6.4"
        #   PYTHON_ARCH: "32"

        # - PYTHON: "C:\\Miniconda3"
        #   PYTHON_VERSION: "3.6.4"
        #   MINICONDA_VERSION: "4.4.10"
        #   PYTHON_ARCH: "32"

        #- PYTHON: "C:\\Miniconda36-x64"
        #  PYTHON_VERSION: "3.6"
        #  MINICONDA_VERSION: "4.5.4"
        #  PYTHON_ARCH: "64"

        - PYTHON: "C:\\Miniconda37-x64"
          PYTHON_VERSION: "3.7"
          MINICONDA_VERSION: "4.5.12"
          PYTHON_ARCH: "64"

        - PYTHON: "C:\\Python36-x64"
          PYTHON_VERSION: "3.6"
          PYTHON_ARCH: "64"

        - PYTHON: "C:\\Python37-x64"
          PYTHON_VERSION: "3.7"
          PYTHON_ARCH: "64"

# Cancel pending jobs after first job failure
matrix:
    fast_finish: true

install:
# Some conditional statements are splited to avoid "\Microsoft was unexpected at this time.‚Äù error.
# https://support.microsoft.com/ja-jp/help/2524009/error-running-command-shell-scripts-that-include-parentheses
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  - cmd: "IF '%MINICONDA_VERSION%'=='' (
            python -m pip install -U pip &&
            python -m pip install -U wheel &&
            python -m pip install -U -r requirements.txt &&
            python -m pip install -U -r tests/requirements.txt
          ) ELSE (
            CALL %PYTHON%\\Scripts\\activate.bat &&
            conda config --set always_yes yes &&
            conda update -n base conda &&
            conda config --add channels conda-forge &&
            conda config --add channels conda-forge/label/testing &&
            activate &&
            conda create -n yellowbrick &&
            call activate yellowbrick &&
            conda install --file tests/requirements.txt
          )"
  - python -m nltk.downloader popular

# No requirement to build any C libraries
build: off

test_script:
    - "python setup.py test"

after_test:
    - "python setup.py bdist_wheel"

artifacts:
    - path: dist\*

cache:
    # Use the appveryor cache to avoid redownload of numpy and scipy wheels
    - '%APPDATA%\pip\Cache'

notifications:
    - provider: Slack
      auth_token:
        secure: 6hd0IQ66qUUiStas9s304izgV7Wh0XyY0gFjuua7H8gtYle41gbFozkfKgzs110oK/iT4XKWrNfWOgz3S5Jcp2SGFXQ9IvF5ZqYmX71ZQRY=
      channel: '#yb-ci'
      on_build_success: true
      on_build_failure: true
      on_build_status_changed: true
