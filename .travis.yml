env:
  global:
    # include $HOME/.local/bin for `aws`
    - PATH=$HOME/.local/bin:$PATH

dist: xenial
language: python
matrix:
  include:
#    - name: "Python 3.6 on Xenial Linux"
#      python: '3.6'
#      env: PY_SOURCE="pypi"

#    - name: "Python 3.7 on Xenial Linux"
#      python: '3.7'
#      env: PY_SOURCE="pypi"

    - name: "Miniconda 3.6 on Xenial Linux"
      env: ANACONDA="3.6" PY_SOURCE="anaconda"

#    - name: "Miniconda 3.7 on Xenial Linux"
#      env: ANACONDA="3.7" PY_SOURCE="anaconda"

before_install:
- sudo apt-get update
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      MINICONDA_OS="Linux";
      if [[ "$PY_SOURCE" == "pypi" ]]; then
        sudo apt-get build-dep python-scipy;
      fi
    else
      MINICONDA_OS="MacOSX";
  fi

install:
- if [[ "$PY_SOURCE" == "pypi" ]]; then
      pip install -r requirements.txt;
      pip install -r tests/requirements.txt;
      pip install coveralls;
      pip install awscli;
    else
      wget https://repo.anaconda.com/miniconda/Miniconda3-latest-$MINICONDA_OS-x86_64.sh -O miniconda.sh;
      bash miniconda.sh -b -p $HOME/miniconda;
      export PATH="$HOME/miniconda/bin:$PATH";
      hash -r;
      conda config --set always_yes yes --set changeps1 no;
      conda update -n base conda --yes;
      conda config --add channels conda-forge;
      export BASE_PYTHON=`python -c 'import sys; version=sys.version_info[:3]; print("{0}.{1}.{2}".format(*version))'`;
      echo "Base Anconda Python is $BASE_PYTHON";
      echo "Creating conda environment with Anaconda Python $ANACONDA";
      conda env create -f tests/requirements.txt -n yellowbrick python=$ANACONDA;
      source activate yellowbrick;
      conda install coveralls;
      conda install awscli;
  fi

script: 
#- python -m nltk.downloader popular
- pytest ./tests/test_features

after_failure:
- IMAGE_DIFFS=$(find ./tests/actual_images/test_features -name "**failed-diff.png");
# If there are failed images, tar and sync to S3
- if [[compgen -G $IMAGE_DIFFS > /dev/null]]; then
      echo "There are image diffs";
      mkdir -p ~/actual_images;
      for diff in $IMAGE_DIFFS
        do ACTUAL=${diff%"-failed-diff.png"}".png"
        cp $ACTUAL ~/actual_images
        echo "Actual $ACTUAL"
      done
      if [[ -z ${ANACONDA} ]]; then
          echo "Collecting diffs and actuals for PyPI Python $TRAVIS_PYTHON_VERSION";
          IMAGES_DIR="$TRAVIS_BUILD_NUMBER/$TRAVIS_OS_NAME/$PY_SOURCE/$TRAVIS_PYTHON_VERSION";
        else
          echo "Collecting diffs and actuals for Anaconda Python $ANACONDA";
          IMAGES_DIR="$TRAVIS_BUILD_NUMBER/$TRAVIS_OS_NAME/$PY_SOURCE/$ANACONDA";
      fi
      mkdir -p ~/$IMAGES_DIR;
      tar -cvfj ~/$IMAGES_DIR/diffs_$TRAVIS_JOB_ID.tar.bz2 $IMAGE_DIFFS;
      tar -cvfj ~/$IMAGES_DIR/actuals_$TRAVIS_JOB_ID.tar.bz2 ~/actual_images;
      aws s3 sync $IMAGES_DIR s3://nickpowersys-travisminiconda/$TRAVIS_BUILD_NUMBER;
  fi

after_success: coveralls

notifications:
  slack:
    secure: mWKVHmEc22FJSp6Rrnd1j4QYCgZY4NJSrA8kZ5wj2/lf1iHI/CfWGTf7+Qihqe+rt0FOU0+UA9SzvSHRD1bV76q/zINayQ0EyJAfQzvIWIRGGnnMSO/79WoEYF56wwjpc5pLUTh6QV5qqfy+8nNGQ1/uJ0h6FtsUaSa/g61a5ZJEVBIjIpH8PgMxM64dRgJCmAdQuXkBP5Uf3yHlCtYk+Jr+gyXU2oqwMZ1VWgZkEo1Tqo7W9WY8dkOaAkzXDT61OqtcyyTuVSYbmK4i3c84681NBpb7wT6BfiCCAd3tn5AIKCkJVJ0ga0XeF6MdDpnicpku4FaN+fQjwkPiU47o/aFp8RNp27JQ9AhvH7wMuu5O8HDhszjRkfGOlUbuPOTavc22o4j0ShsrLiTQRJRhQQzJoquPuPj5wHqCCN+ice7IVUHj3ZC2jpJKDEYUNnr1fATtOwocimc6PhJM/IoeHgEEHpi37b+AxnhgOFoBlgsq2f4nsRD9JsLHqIpJCHgMjKxc6p3FtcFcXZDlDXQIcCzSRiPhG207dahspA3aPLj4Z+tOLJwh7/PSEfp02kcgPMM/MLYTWcaBv14aYi69kvQoZTfqVY8tIohg3ygda5siOCTTgqGriJYzkmdY5/Dp51kabhl+cEVIxPyY0miqyl3hZjqkqCnnOtg06qqxLLM=
